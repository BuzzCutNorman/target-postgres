[tool.poetry]
name = "target-postgres"
version = "0.0.3"
description = "`target-postgres` is a Singer target for postgres, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["Dan Norman"]
keywords = [
    "ELT",
    "postgres",
]
classifiers = [
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = "MIT"

[tool.poetry.dependencies]
python = ">=3.8"
singer-sdk = { version="~=0.36.1" }
fs-s3fs = { version = "^1.1.1", optional = true }
psycopg2 = "^2.9.9"
psycopg = {extras = ["binary"], version = "^3.1.18"}

[tool.poetry.dev-dependencies]
pytest = ">=7.4.0"
singer-sdk = { version="~=0.36.1", extras = ["testing"] }

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.ruff]
src = ["target_postgres"]
target-version = "py38"

[tool.ruff.lint]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
    "COM812",  # missing-trailing-comma
    "ISC001",  # single-line-implicit-string-concatenation
]
select = ["ALL"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort]
known-first-party = ["target_postgres"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core==1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
target-postgres = 'target_postgres.target:Targetpostgres.cli'
